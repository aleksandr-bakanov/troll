========================================================================
	Общее
========================================================================
Все команды начинаются с 4-байтового целого, которое указывает на длину
оставшейся части команды. Затем следует 2-байтовый id команды, после
которого идут байты (ноль или более) специфичные для каждой команды.

========================================================================
	Server side commands
========================================================================
Здесь описываются команды отправляемые сервером клиенту.

1	- S_TRACE. Клиент должен вывести присланное сообщение в отладчик.
	Params:
		message [string]

3	- S_LOGIN_FAILURE. Сообщаем клиенту о том, что обработка последней
	команды C_LOGIN, полученной от него, завершилась неудачей.
	Params:
		reason [1]:
			1 - нет записи в базе данных
			2 - is_playing == 1

5	- S_REGISTER_SUCCESS. Клиент успешно зарегистрирован в системе.

7	- S_REGISTER_FAILURE. Регистрация не удалась. Причина указана
	в параметре команды. Если длина логина, присланного клиентом,
	превышает 16 символов, то он идет лесом. То же в отношении неверных
	параметров персонажа.
	Params:
		reason [1]:
			1 - логин уже занят
			2 - логин не прошел проверки регулярным выражением

9	- S_LOGIN_SUCCESS. Клиент успешно залогинился в системе.

11	- S_FULL_PARAMS. Отправка клиенту полных параметров персонажа.
	Params:
		id [4]
		name [string]
		params [string] (JSON)

13	- S_ITEM_INFO. Сервер отправляет клиенту информацию о предмете.
	Params:
		id [2]
		params [string] (JSON)

========================================================================
	Client side commands
========================================================================
Здесь описываются команды отправляемые клиентом серверу.

2	- C_LOGIN. Клиент набрал в окне логина пару логин/пароль и желает
	зайти в игру. Мы должны проверить: существует ли такая пара
	логин/пароль, не играет ли уже игрок с такой парой, потому что если
	создать два контроллера, одновременно управляющих игроком, возникнет
	путаница.
	Params:
		логин [string]
		пароль [string]
	Здесь и далее в квадратных скобках после параметра команды будет
	указываться количество байт, отведенных под параметр. [string]
	означает, что передается строка, которая в свою очередь записывается
	так: сначала идут 2 байта указывающие на длину в байтах следующей
	за ними строки. Строка передается в UTF-8. Кстати, с этими строками
	нужно быть аккуратней. Например еретический клиент может прислать
	нам строку 'abc' указав перед ней длину большую трех. За этим нужно
	следить.

4	- C_REGISTER. Клиент регистрируется в системе. Если параметры,
	присланные им верны, нужно завести запись в базе данных.
	Params:
		login [string]
		password [string]
		strength [1]
		dexterity [1]
		intellect [1]
		health [1]

6	- C_ITEM_INFO. Клиент запрашивает информацию о предмете.
	Params:
		id [2]

8	- C_WEAR_ITEM. Игрок одевает или снимает предмет.
	Params:
		id [2] - id предмета
		wear [1] - true - одевает, false - снимает
		place [1] - ячейка
			1 - body
			2 - legs
			3 - right hand
			4 - left hand

10	- C_DROP_ITEM. Игрок выбрасывает предмет. Если в рюкзаке игрока
	больше одного такого предмета, выбрасывается один. Если у игрока
	две фуфайки, одна из которых одета, выбрасывается неодетая.
	Params:
		id [2] - id предмета
		place [1] - если предмет не был одет = 0,
		иначе см. C_WEAR_ITEM
